---
// Astro component
import ProductCard from "./05-ProductCard.astro";

// Define interfaces for our data structures
interface Product {
    category: string;
    image: string;
    name: string;
    description: string;
    discount?: number;
    isNew?: boolean;
}

// You might want to fetch this data from an API or database
const products: Product[] = [
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
        discount: null,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
        discount: 1000,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
    },
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "motocicletas",
        image: "/assets/images/product_1.jpg",
        name: "MT-03",
        description: "Potencia y agilidad en un diseño compacto.",
        discount: 1000,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
        discount: null,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
        discount: 1000,
    },
    {
        category: "wave",
        image: "/assets/images/product_2.jpg",
        name: "FX SVHO",
        description: "Rendimiento superior en el agua.",
        isNew: true,
    },
    // Add more products here...
];

const categories = [
    { id: "motocicletas", name: "MOTOCICLETAS" },
    { id: "wave", name: "WAVE RUNNERS" },
    { id: "atv", name: "ATVS Y SIDE BY SIDE" },
    { id: "motores", name: "MOTORES" },
    { id: "bombas", name: "BOMBAS DE AGUA" },
    { id: "generadores", name: "GENERADORES" },
];
---

<div class="new_arrivals bg-white py-8 sm:py-16" id="new_arrivals">
    <div class="container mx-auto px-4">
        <span class="relative flex justify-center mb-4">
            <div
                class="absolute inset-x-0 top-1/2 h-px -translate-y-1/2 bg-transparent bg-gradient-to-r from-transparent via-gray-500 to-transparent opacity-75"
            >
            </div>
            <span class="relative z-10 bg-white px-6">
                <h2 class="text-2xl sm:text-3xl font-bold text-gray-800">
                    EXPLORA NUESTRA TIENDA
                </h2>
            </span>
        </span>
        <div class="mb-6 sm:mb-8 overflow-x-auto">
            <ul
                class="flex mx-1 my-1 flex-nowrap justify-start sm:justify-center gap-2 sm:gap-4 pb-2 sm:pb-0"
                id="category-buttons"
            >
                {
                    categories.map((category, index) => (
                        <li>
                            <button
                                class:list={[
                                    "category-button",
                                    { active: index === 0 },
                                ]}
                                data-filter={category.id}
                            >
                                {category.name}
                            </button>
                        </li>
                    ))
                }
            </ul>
        </div>
        <div
            class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 sm:gap-0"
            id="product-grid"
        >
            {products.map((product) => <ProductCard product={product} />)}
        </div>
    </div>
</div>

<style>
    .category-button {
        @apply px-3 py-1 sm:px-4 sm:py-2 text-xs sm:text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors duration-300;
        white-space: nowrap;
    }
    .category-button.active {
        @apply bg-red-600 text-white border-red-600 hover:bg-red-700;
    }
</style>

<script>
    const filterButtons =
        document.querySelectorAll<HTMLButtonElement>(".category-button");
    const productItems =
        document.querySelectorAll<HTMLDivElement>(".product-item");

    function filterProducts(filterValue: string) {
        productItems.forEach((item) => {
            if (item.getAttribute("data-category") === filterValue) {
                item.style.display = "block";
            } else {
                item.style.display = "none";
            }
        });
    }

    filterButtons.forEach((button, index) => {
        button.addEventListener("click", () => {
            const filterValue = button.getAttribute("data-filter");
            if (filterValue) {
                filterProducts(filterValue);
            }

            filterButtons.forEach((btn) => btn.classList.remove("active"));
            button.classList.add("active");
        });

        // Activate the first button (Motocicletas) on page load
        if (index === 0) {
            const filterValue = button.getAttribute("data-filter");
            if (filterValue) {
                filterProducts(filterValue);
            }
        }
    });

    // Filter motocicletas on page load
    filterProducts("motocicletas");
</script>
